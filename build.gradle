description 'Redirects Java SDK'
group 'com.sharecare.services'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        credentials {
            username artUsername
            password artPassword
        }
        url "http://artifactory.be.sharecare.com/JAM-release-local"
        name = "maven-jamp-release"
    }

    maven {
        credentials {
            username artUsername
            password artPassword
        }
        url "http://artifactory.be.sharecare.com/JAM-snapshot-local"
        name = "maven-jamp-snapshot"
    }
}


configurations {
    provided
    compile.extendsFrom provided
}

ext {
}

dependencies {
    provided "org.apache.httpcomponents:httpclient:4.5.2"
    compile "org.projectlombok:lombok:1.16.6",
            "org.slf4j:jcl-over-slf4j:1.7.0",
            "org.slf4j:slf4j-api:1.7.0",
            "org.slf4j:slf4j-log4j12:1.7.7",
            "ch.qos.logback:logback-classic:1.1.3",
            "ch.qos.logback:logback-core:1.1.3",
            "net.logstash.logback:logstash-logback-encoder:4.4",
            "org.codehaus.groovy:groovy:2.4.3"

    compile(group: 'com.sharecare.services', name: 'core-java-sdk', version: '1.2.0')

    testCompile "junit:junit-dep:4.10",
                "org.hamcrest:hamcrest-all:1.3"

}


// enable all compiler warnings; individual projects may customize further
ext.xLintArg = '-Xlint:all'
[compileJava, compileTestJava]*.options*.compilerArgs = [xLintArg]

tasks.withType(Test).all {
    // suppress all console output during testing unless running `gradle -i`
    logging.captureStandardOutput(LogLevel.INFO)

    include '**/*Test.class'
    exclude '**/Abstract*.class'
}



task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

artifacts {
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://artifactory.be.sharecare.com/JAM-release-local") {
                authentication(userName: artUsername, password: artPassword)
            }

            snapshotRepository(url: "http://artifactory.be.sharecare.com/JAM-snapshot-local") {
                authentication(userName: artUsername, password: artPassword)
            }

        }
    }
}
